<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: team-dynamics | Catch me code]]></title>
  <link href="http://catchmecode.com/blog/categories/team-dynamics/atom.xml" rel="self"/>
  <link href="http://catchmecode.com/"/>
  <updated>2013-11-16T21:30:40+01:00</updated>
  <id>http://catchmecode.com/</id>
  <author>
    <name><![CDATA[Jonas Lundberg]]></name>
    <email><![CDATA[jonasl@catchmecode.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Phone meetings]]></title>
    <link href="http://catchmecode.com/blog/2013/05/10/phonemeetings/"/>
    <updated>2013-05-10T21:52:00+02:00</updated>
    <id>http://catchmecode.com/blog/2013/05/10/phonemeetings</id>
    <content type="html"><![CDATA[<p>This happens often enough to qualify for a post. Phone meetings. The one where you call in to synchronize some process or project. My workplace does a fair amount of integrations (i e sending data from us to them or vice versa) that this is a real problem. As an agile team, no wait, strike that.. as a team who like to get stuff done have to fend ourselves from spending too much time in those.</p>

<p>Lets delve into this a bit, shall we?</p>

<h2>Background</h2>

<p>Let&rsquo;s clarify first &ndash; I&rsquo;m all for keeping close contact (if needed) and synchronizing schedules. This is pivotal to meeting the integration deadline. Its very dissatisfying to really push through an integration only to find out that the other side is not nearly done. Your code will be in a vacuum until they start testing their pieces and you&rsquo;ll have to go back and fix all the tings uncovered during their test phase. Nope, it&rsquo;s about the medium (phone) and the scheduling (not governed by technical needs).</p>

<h2>4k bandwidth impediment</h2>

<p>Software, data-exchange formats and the likes are no pick nick doing in person. I know that if we have a whiteboard it&rsquo;ll take some time to understand each other, and another chunk of time to get a solution in place. Imposing an artificial impediment such as no visual information and only 4k of bandwidth (fixed phone lines) makes little sense coming from a technical perspective.</p>

<p>I understand that phone is the second best medium for dealing with human relations &ndash; but in technical discussions where the objective is to flesh out the details of a transfer format or what webservice port we&rsquo;re using its maybe the nth best medium. Way superior is something visual &ndash; such as mail and or lo-fi snapshots of whiteboards &ndash; details needs to be in writing.</p>

<h2>Imposed scheduling</h2>

<p>A first meeting is ok &ndash; preferably a short one where we say &ldquo;I&rsquo;m Jonas  &ndash; a developer. I&rsquo;ll be handling the integration from our side. Oh, you&rsquo;re using .NET? Ok, good to know for webservice quirks and BOM characters. Now, can we go offline and do the rest via mail? Great, nice talking to you all, we&rsquo;ll keep you updated on the progress&rdquo;. We are humans after all and a voice and a name goes a long way in better cooperation.</p>

<p>But really, more than that first startup meeting is rarely a good use of time. Now, this is highly dependent on the project manager on the other side. If we&rsquo;re lucky, they are ok with an on a need to know basis &ndash; i e when we hit cases not covered by specs. Most of the time though there are meetings scheduled more out of management needs &ndash; e g a status meeting 1h each week to follow up on anything that happened last week. I like to think of these meetings <a href="http://simpsonswiki.net/wiki/Everything's_OK_alarm">the everything&rsquo;s ok alarm</a>. Or worse, those weekly meetings plus a new meeting anytime a mail even mentions the words problem, bug, issue or the likes.</p>

<p>This gets in the way of producing code &ndash; problems rarely align to weekly meetings and weekly meetings are rarely interesting in full to all parties involved.</p>

<h2>They are not stupid</h2>

<p>As said from the outset this might seem outlandish to an agile small team &ndash; but lets consider context. I&rsquo;m guessing it makes very much sense in other organizations to have many and recurring meetings. It may be a large corporation where this is the only way managers can keep up with how the project evolves. Being small and agile largely cuts this out. Also consider that many things that seems stupid now started out as being helpful (TPS reports etc) only to later evolve into something that may not be so helpful now &ndash; except that there is no better alternative. Or that none dares to go differently.</p>

<h2>You might be the weird one</h2>

<p>At many places things don&rsquo;t happen because someone says so &ndash; things happen because there are follow up meetings and agendas. Trying to get out of meetings might signal that you&rsquo;re work shy. Explain very thoroughly how you work and what you will deliver at what point in time.</p>

<h2>You might be a tiny part of it</h2>

<p>Sometimes its hard to gauge the size of the project on the other side. You might be a tiny part in the whole &ndash; it&rsquo;s just that its not apparent. The file you are sending their way might be processed in 15 different systems and all of them needs to implement this new feature. You&rsquo;ll be spending lots of time listening to their issues and scheduling synchronizations. This is not in defense of huge meetings &ndash; but its often a reality and might be of some comfort when trying to understand why there are 10 people in this meeting when you are sending 1 file.</p>

<h2>Eject early, eject often</h2>

<p>There is hope however. It may not have to be like this, or it can at least be brought down to a lesser level:</p>

<h2>Inversion of control</h2>

<p>In the initial meeting, try to figure out who&rsquo;s the key technical person on the other side. Get their mail (and phone number if needed). If you&rsquo;re lucky you can go straight to that person and most things never have to escalate beyond you two (except when it actually is a problem for the whole project). The technician on the other side might be interested in this too &ndash; most coders face the same problem with tech specs over phone and meetings gets in the way of producing code.</p>

<p>And if no one seems to be the key person &ndash; try to see if someone gives you coherent and intelligent answers. Maybe they can point you in the right direction. Mail only the person you think know have the answer, avoid cc:ing lots of people (unless you&rsquo;ve promised some project manager to cc your conversation. Include only them in that case). Mail threads tend to accelerate the number of people on the send list fast and if it grows big enough it might trigger a new meeting.</p>

<h2>Get a goal keeper</h2>

<p>This should ideally be your project owner or someone who carries enough weight that if they say &ldquo;we&rsquo;re doing fine&rdquo; &ndash; its assumed you&rsquo;re actually doing fine. This person participates in any weekly status meetings on your behalf. Send him a status report saying &ldquo;we&rsquo;re ok&rdquo; (if you&rsquo;re ok) and ask for condensed information that pertains you (it&rsquo;s usually very little). The product owner might be interested in covering for you since its project time spent in meetings that could have been used more wisely.</p>

<h2>Round robin the role</h2>

<p>If none of the above works &ndash; share the burden. You&rsquo;re doing a good thing &ndash; freeing up the rest of the team to get some work done. They&rsquo;ll get a good laugh when you roll your eyes and do the talking hand motion &ndash; and they&rsquo;ll probably back you up with videos of funny cats and capybaras to ease your pain. And next time you&rsquo;re off the hook.</p>
]]></content>
  </entry>
  
</feed>
